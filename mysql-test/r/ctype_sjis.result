drop table if exists t1;
set names sjis;
select 'a' like 'a';
'a' like 'a'
1
select 'A' like 'a';
'A' like 'a'
1
select 'A' like 'a' collate sjis_bin;
'A' like 'a' collate sjis_bin
0
set @sjis1= _sjis   0xa1a2a3a4a5a6a7a8a9aaabacadaeaf;
set @sjis2= _sjis 0xb0b1b2b3b4b5b6b7b8b9babbbcbdbebf;
set @sjis3= _sjis 0xc0c1c2c3c4c5c6c7c8c9cacbcccdcecf;
set @sjis4= _sjis 0xd0d1d2d3d4d5d6d7d8d9dadbdcdddedf;
set @utf81= CONVERT(@sjis1 USING utf8);
set @utf82= CONVERT(@sjis2 USING utf8);
set @utf83= CONVERT(@sjis3 USING utf8);
set @utf84= CONVERT(@sjis4 USING utf8);
select hex(@utf81);
hex(@utf81)
EFBDA1EFBDA2EFBDA3EFBDA4EFBDA5EFBDA6EFBDA7EFBDA8EFBDA9EFBDAAEFBDABEFBDACEFBDADEFBDAEEFBDAF
select hex(@utf82);
hex(@utf82)
EFBDB0EFBDB1EFBDB2EFBDB3EFBDB4EFBDB5EFBDB6EFBDB7EFBDB8EFBDB9EFBDBAEFBDBBEFBDBCEFBDBDEFBDBEEFBDBF
select hex(@utf83);
hex(@utf83)
EFBE80EFBE81EFBE82EFBE83EFBE84EFBE85EFBE86EFBE87EFBE88EFBE89EFBE8AEFBE8BEFBE8CEFBE8DEFBE8EEFBE8F
select hex(@utf84);
hex(@utf84)
EFBE90EFBE91EFBE92EFBE93EFBE94EFBE95EFBE96EFBE97EFBE98EFBE99EFBE9AEFBE9BEFBE9CEFBE9DEFBE9EEFBE9F
select hex(CONVERT(@utf81 USING sjis));
hex(CONVERT(@utf81 USING sjis))
A1A2A3A4A5A6A7A8A9AAABACADAEAF
select hex(CONVERT(@utf82 USING sjis));
hex(CONVERT(@utf82 USING sjis))
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
select hex(CONVERT(@utf83 USING sjis));
hex(CONVERT(@utf83 USING sjis))
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
select hex(CONVERT(@utf84 USING sjis));
hex(CONVERT(@utf84 USING sjis))
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF
create table t1 (a char(10) character set sjis);
insert into t1 values (0x878A);
select hex(a) from t1;
hex(a)
878A
drop table t1;
create table t1(c enum(0x9353,0x9373) character set sjis);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c` enum('ìS','ìs') CHARACTER SET sjis DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1
insert into t1 values (0x9353);
insert into t1 values (0x9373);
select hex(c) from t1;
hex(c)
9353
9373
drop table t1;
SET NAMES sjis;
CREATE TABLE t1 (
c char(16) default NULL
) ENGINE=MyISAM DEFAULT CHARSET=sjis;
insert into t1 values(0xb1),(0xb2),(0xb3);
select hex(c) from t1;
hex(c)
B1
B2
B3
drop table t1;
SET collation_connection='sjis_japanese_ci';
create table t1 select repeat('a',4000) a;
delete from t1;
insert into t1 values ('a'), ('a '), ('a\t');
select collation(a),hex(a) from t1 order by a;
collation(a)	hex(a)
sjis_japanese_ci	6109
sjis_japanese_ci	61
sjis_japanese_ci	6120
drop table t1;
create table t1 engine=innodb select repeat('a',50) as c1;
alter table t1 add index(c1(5));
insert into t1 values ('abcdefg'),('abcde100'),('abcde110'),('abcde111');
select collation(c1) from t1 limit 1;
collation(c1)
sjis_japanese_ci
select c1 from t1 where c1 like 'abcdef%' order by c1;
c1
abcdefg
select c1 from t1 where c1 like 'abcde1%' order by c1;
c1
abcde100
abcde110
abcde111
select c1 from t1 where c1 like 'abcde11%' order by c1;
c1
abcde110
abcde111
select c1 from t1 where c1 like 'abcde111%' order by c1;
c1
abcde111
drop table t1;
select @@collation_connection;
@@collation_connection
sjis_japanese_ci
create table t1 ROW_FORMAT=DYNAMIC select repeat('a',50) as c1 ;
insert into t1 values('abcdef');
insert into t1 values('_bcdef');
insert into t1 values('a_cdef');
insert into t1 values('ab_def');
insert into t1 values('abc_ef');
insert into t1 values('abcd_f');
insert into t1 values('abcde_');
select c1 as c1u from t1 where c1 like 'ab\_def';
c1u
ab_def
select c1 as c2h from t1 where c1 like 'ab#_def' escape '#';
c2h
ab_def
drop table t1;
CREATE TABLE t1 AS
SELECT 10 AS a, REPEAT('a',20) AS b, REPEAT('a',8) AS c, REPEAT('a',8) AS d;
ALTER TABLE t1 ADD PRIMARY KEY(a), ADD KEY(b);
INSERT INTO t1 (a, b) VALUES (1, repeat(0xF1F2,5));
INSERT INTO t1 (a, b) VALUES (2, repeat(0xF1F2,10));
INSERT INTO t1 (a, b) VALUES (3, repeat(0xF1F2,11));
INSERT INTO t1 (a, b) VALUES (4, repeat(0xF1F2,12));
SELECT hex(concat(repeat(0xF1F2, 10), '%'));
hex(concat(repeat(0xF1F2, 10), '%'))
F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F225
3 rows expected
SELECT a, hex(b), c FROM t1 WHERE b LIKE concat(repeat(0xF1F2,10), '%');
a	hex(b)	c
2	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	
3	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	
4	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	
DROP TABLE t1;
SET collation_connection='sjis_bin';
create table t1 select repeat('a',4000) a;
delete from t1;
insert into t1 values ('a'), ('a '), ('a\t');
select collation(a),hex(a) from t1 order by a;
collation(a)	hex(a)
sjis_bin	6109
sjis_bin	61
sjis_bin	6120
drop table t1;
create table t1 engine=innodb select repeat('a',50) as c1;
alter table t1 add index(c1(5));
insert into t1 values ('abcdefg'),('abcde100'),('abcde110'),('abcde111');
select collation(c1) from t1 limit 1;
collation(c1)
sjis_bin
select c1 from t1 where c1 like 'abcdef%' order by c1;
c1
abcdefg
select c1 from t1 where c1 like 'abcde1%' order by c1;
c1
abcde100
abcde110
abcde111
select c1 from t1 where c1 like 'abcde11%' order by c1;
c1
abcde110
abcde111
select c1 from t1 where c1 like 'abcde111%' order by c1;
c1
abcde111
drop table t1;
select @@collation_connection;
@@collation_connection
sjis_bin
create table t1 ROW_FORMAT=DYNAMIC select repeat('a',50) as c1 ;
insert into t1 values('abcdef');
insert into t1 values('_bcdef');
insert into t1 values('a_cdef');
insert into t1 values('ab_def');
insert into t1 values('abc_ef');
insert into t1 values('abcd_f');
insert into t1 values('abcde_');
select c1 as c1u from t1 where c1 like 'ab\_def';
c1u
ab_def
select c1 as c2h from t1 where c1 like 'ab#_def' escape '#';
c2h
ab_def
drop table t1;
CREATE TABLE t1 AS
SELECT 10 AS a, REPEAT('a',20) AS b, REPEAT('a',8) AS c, REPEAT('a',8) AS d;
ALTER TABLE t1 ADD PRIMARY KEY(a), ADD KEY(b);
INSERT INTO t1 (a, b) VALUES (1, repeat(0xF1F2,5));
INSERT INTO t1 (a, b) VALUES (2, repeat(0xF1F2,10));
INSERT INTO t1 (a, b) VALUES (3, repeat(0xF1F2,11));
INSERT INTO t1 (a, b) VALUES (4, repeat(0xF1F2,12));
SELECT hex(concat(repeat(0xF1F2, 10), '%'));
hex(concat(repeat(0xF1F2, 10), '%'))
F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F225
3 rows expected
SELECT a, hex(b), c FROM t1 WHERE b LIKE concat(repeat(0xF1F2,10), '%');
a	hex(b)	c
2	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	
3	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	
4	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	
DROP TABLE t1;
SET NAMES sjis;
SELECT HEX('ç≤ìëÅ@å\') FROM DUAL;
HEX('ç≤ìëÅ@å\')
8DB2939181408C5C
# Start of 5.1 tests
Bug#44352 UPPER/LOWER function doesn't work correctly on cp932 and sjis environment.
CREATE TABLE t1 (a varchar(16)) character set sjis;
INSERT INTO t1 VALUES (0x8372835E),(0x8352835E);
SELECT hex(a), hex(lower(a)), hex(upper(a)) FROM t1 ORDER BY binary(a);
hex(a)	hex(lower(a))	hex(upper(a))
8352835E	8352835E	8352835E
8372835E	8372835E	8372835E
DROP TABLE t1;
# End of 5.1 tests
#
# Start of 5.5 tests
#
#
# Testing WL#4583 Case conversion in Asian character sets 
#
SET NAMES utf8;
SET collation_connection=sjis_japanese_ci;
CREATE TABLE t1 (b VARCHAR(2));
INSERT INTO t1 VALUES ('0'),('1'),('2'),('3'),('4'),('5'),('6'),('7');
INSERT INTO t1 VALUES ('8'),('9'),('A'),('B'),('C'),('D'),('E'),('F');
CREATE TEMPORARY TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1, t1 b2;
CREATE TEMPORARY TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1, t1 b2;
DROP TABLE t1;
CREATE TABLE t1 AS
SELECT concat(head, tail) AS code, ' ' AS a
FROM head, tail
WHERE (head BETWEEN '80' AND 'FF') AND (head NOT BETWEEN 'A1' AND 'DF')
AND   (tail BETWEEN '20' AND 'FF')
ORDER BY head, tail;
INSERT t1 (code) SELECT head FROM head WHERE (head BETWEEN 'A1' AND 'DF');
DROP TEMPORARY TABLE head, tail;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `code` varchar(8) DEFAULT NULL,
  `a` varchar(1) CHARACTER SET sjis NOT NULL DEFAULT ''
) ENGINE=MyISAM DEFAULT CHARSET=latin1
UPDATE t1 SET a=unhex(code) ORDER BY code;
Warnings:
Warning	1366	Incorrect string value: '\x80 ' for column 'a' at row 1
Warning	1366	Incorrect string value: '\x80!' for column 'a' at row 2
Warning	1366	Incorrect string value: '\x80"' for column 'a' at row 3
Warning	1366	Incorrect string value: '\x80#' for column 'a' at row 4
Warning	1366	Incorrect string value: '\x80$' for column 'a' at row 5
Warning	1366	Incorrect string value: '\x80%' for column 'a' at row 6
Warning	1366	Incorrect string value: '\x80&' for column 'a' at row 7
Warning	1366	Incorrect string value: '\x80'' for column 'a' at row 8
Warning	1366	Incorrect string value: '\x80(' for column 'a' at row 9
Warning	1366	Incorrect string value: '\x80)' for column 'a' at row 10
Warning	1366	Incorrect string value: '\x80*' for column 'a' at row 11
Warning	1366	Incorrect string value: '\x80+' for column 'a' at row 12
Warning	1366	Incorrect string value: '\x80,' for column 'a' at row 13
Warning	1366	Incorrect string value: '\x80-' for column 'a' at row 14
Warning	1366	Incorrect string value: '\x80.' for column 'a' at row 15
Warning	1366	Incorrect string value: '\x80/' for column 'a' at row 16
Warning	1366	Incorrect string value: '\x800' for column 'a' at row 17
Warning	1366	Incorrect string value: '\x801' for column 'a' at row 18
Warning	1366	Incorrect string value: '\x802' for column 'a' at row 19
Warning	1366	Incorrect string value: '\x803' for column 'a' at row 20
Warning	1366	Incorrect string value: '\x804' for column 'a' at row 21
Warning	1366	Incorrect string value: '\x805' for column 'a' at row 22
Warning	1366	Incorrect string value: '\x806' for column 'a' at row 23
Warning	1366	Incorrect string value: '\x807' for column 'a' at row 24
Warning	1366	Incorrect string value: '\x808' for column 'a' at row 25
Warning	1366	Incorrect string value: '\x809' for column 'a' at row 26
Warning	1366	Incorrect string value: '\x80:' for column 'a' at row 27
Warning	1366	Incorrect string value: '\x80;' for column 'a' at row 28
Warning	1366	Incorrect string value: '\x80<' for column 'a' at row 29
Warning	1366	Incorrect string value: '\x80=' for column 'a' at row 30
Warning	1366	Incorrect string value: '\x80>' for column 'a' at row 31
Warning	1366	Incorrect string value: '\x80?' for column 'a' at row 32
Warning	1366	Incorrect string value: '\x80@' for column 'a' at row 33
Warning	1366	Incorrect string value: '\x80A' for column 'a' at row 34
Warning	1366	Incorrect string value: '\x80B' for column 'a' at row 35
Warning	1366	Incorrect string value: '\x80C' for column 'a' at row 36
Warning	1366	Incorrect string value: '\x80D' for column 'a' at row 37
Warning	1366	Incorrect string value: '\x80E' for column 'a' at row 38
Warning	1366	Incorrect string value: '\x80F' for column 'a' at row 39
Warning	1366	Incorrect string value: '\x80G' for column 'a' at row 40
Warning	1366	Incorrect string value: '\x80H' for column 'a' at row 41
Warning	1366	Incorrect string value: '\x80I' for column 'a' at row 42
Warning	1366	Incorrect string value: '\x80J' for column 'a' at row 43
Warning	1366	Incorrect string value: '\x80K' for column 'a' at row 44
Warning	1366	Incorrect string value: '\x80L' for column 'a' at row 45
Warning	1366	Incorrect string value: '\x80M' for column 'a' at row 46
Warning	1366	Incorrect string value: '\x80N' for column 'a' at row 47
Warning	1366	Incorrect string value: '\x80O' for column 'a' at row 48
Warning	1366	Incorrect string value: '\x80P' for column 'a' at row 49
Warning	1366	Incorrect string value: '\x80Q' for column 'a' at row 50
Warning	1366	Incorrect string value: '\x80R' for column 'a' at row 51
Warning	1366	Incorrect string value: '\x80S' for column 'a' at row 52
Warning	1366	Incorrect string value: '\x80T' for column 'a' at row 53
Warning	1366	Incorrect string value: '\x80U' for column 'a' at row 54
Warning	1366	Incorrect string value: '\x80V' for column 'a' at row 55
Warning	1366	Incorrect string value: '\x80W' for column 'a' at row 56
Warning	1366	Incorrect string value: '\x80X' for column 'a' at row 57
Warning	1366	Incorrect string value: '\x80Y' for column 'a' at row 58
Warning	1366	Incorrect string value: '\x80Z' for column 'a' at row 59
Warning	1366	Incorrect string value: '\x80[' for column 'a' at row 60
Warning	1366	Incorrect string value: '\x80\' for column 'a' at row 61
Warning	1366	Incorrect string value: '\x80]' for column 'a' at row 62
Warning	1366	Incorrect string value: '\x80^' for column 'a' at row 63
Warning	1366	Incorrect string value: '\x80_' for column 'a' at row 64
SELECT COUNT(*) FROM t1;
COUNT(*)
14623
SELECT COUNT(*) FROM t1 WHERE a<>'' AND OCTET_LENGTH(a)=1;
COUNT(*)
63
SELECT COUNT(*) FROM t1 WHERE a<>'' AND OCTET_LENGTH(a)=2;
COUNT(*)
11280
SELECT code, hex(upper(a)), hex(lower(a)),a, upper(a), lower(a)
FROM t1
WHERE hex(a)<>hex(upper(a)) OR hex(a)<>hex(lower(a))
ORDER BY code;
code	hex(upper(a))	hex(lower(a))	a	upper(a)	lower(a)
8260	8260	8281	Ôº°	Ôº°	ÔΩÅ
8261	8261	8282	Ôº¢	Ôº¢	ÔΩÇ
8262	8262	8283	Ôº£	Ôº£	ÔΩÉ
8263	8263	8284	Ôº§	Ôº§	ÔΩÑ
8264	8264	8285	Ôº•	Ôº•	ÔΩÖ
8265	8265	8286	Ôº¶	Ôº¶	ÔΩÜ
8266	8266	8287	Ôºß	Ôºß	ÔΩá
8267	8267	8288	Ôº®	Ôº®	ÔΩà
8268	8268	8289	Ôº©	Ôº©	ÔΩâ
8269	8269	828A	Ôº™	Ôº™	ÔΩä
826A	826A	828B	Ôº´	Ôº´	ÔΩã
826B	826B	828C	Ôº¨	Ôº¨	ÔΩå
826C	826C	828D	Ôº≠	Ôº≠	ÔΩç
826D	826D	828E	ÔºÆ	ÔºÆ	ÔΩé
826E	826E	828F	ÔºØ	ÔºØ	ÔΩè
826F	826F	8290	Ôº∞	Ôº∞	ÔΩê
8270	8270	8291	Ôº±	Ôº±	ÔΩë
8271	8271	8292	Ôº≤	Ôº≤	ÔΩí
8272	8272	8293	Ôº≥	Ôº≥	ÔΩì
8273	8273	8294	Ôº¥	Ôº¥	ÔΩî
8274	8274	8295	Ôºµ	Ôºµ	ÔΩï
8275	8275	8296	Ôº∂	Ôº∂	ÔΩñ
8276	8276	8297	Ôº∑	Ôº∑	ÔΩó
8277	8277	8298	Ôº∏	Ôº∏	ÔΩò
8278	8278	8299	Ôºπ	Ôºπ	ÔΩô
8279	8279	829A	Ôº∫	Ôº∫	ÔΩö
8281	8260	8281	ÔΩÅ	Ôº°	ÔΩÅ
8282	8261	8282	ÔΩÇ	Ôº¢	ÔΩÇ
8283	8262	8283	ÔΩÉ	Ôº£	ÔΩÉ
8284	8263	8284	ÔΩÑ	Ôº§	ÔΩÑ
8285	8264	8285	ÔΩÖ	Ôº•	ÔΩÖ
8286	8265	8286	ÔΩÜ	Ôº¶	ÔΩÜ
8287	8266	8287	ÔΩá	Ôºß	ÔΩá
8288	8267	8288	ÔΩà	Ôº®	ÔΩà
8289	8268	8289	ÔΩâ	Ôº©	ÔΩâ
828A	8269	828A	ÔΩä	Ôº™	ÔΩä
828B	826A	828B	ÔΩã	Ôº´	ÔΩã
828C	826B	828C	ÔΩå	Ôº¨	ÔΩå
828D	826C	828D	ÔΩç	Ôº≠	ÔΩç
828E	826D	828E	ÔΩé	ÔºÆ	ÔΩé
828F	826E	828F	ÔΩè	ÔºØ	ÔΩè
8290	826F	8290	ÔΩê	Ôº∞	ÔΩê
8291	8270	8291	ÔΩë	Ôº±	ÔΩë
8292	8271	8292	ÔΩí	Ôº≤	ÔΩí
8293	8272	8293	ÔΩì	Ôº≥	ÔΩì
8294	8273	8294	ÔΩî	Ôº¥	ÔΩî
8295	8274	8295	ÔΩï	Ôºµ	ÔΩï
8296	8275	8296	ÔΩñ	Ôº∂	ÔΩñ
8297	8276	8297	ÔΩó	Ôº∑	ÔΩó
8298	8277	8298	ÔΩò	Ôº∏	ÔΩò
8299	8278	8299	ÔΩô	Ôºπ	ÔΩô
829A	8279	829A	ÔΩö	Ôº∫	ÔΩö
839F	839F	83BF	Œë	Œë	Œ±
83A0	83A0	83C0	Œí	Œí	Œ≤
83A1	83A1	83C1	Œì	Œì	Œ≥
83A2	83A2	83C2	Œî	Œî	Œ¥
83A3	83A3	83C3	Œï	Œï	Œµ
83A4	83A4	83C4	Œñ	Œñ	Œ∂
83A5	83A5	83C5	Œó	Œó	Œ∑
83A6	83A6	83C6	Œò	Œò	Œ∏
83A7	83A7	83C7	Œô	Œô	Œπ
83A8	83A8	83C8	Œö	Œö	Œ∫
83A9	83A9	83C9	Œõ	Œõ	Œª
83AA	83AA	83CA	Œú	Œú	Œº
83AB	83AB	83CB	Œù	Œù	ŒΩ
83AC	83AC	83CC	Œû	Œû	Œæ
83AD	83AD	83CD	Œü	Œü	Œø
83AE	83AE	83CE	Œ†	Œ†	œÄ
83AF	83AF	83CF	Œ°	Œ°	œÅ
83B0	83B0	83D0	Œ£	Œ£	œÉ
83B1	83B1	83D1	Œ§	Œ§	œÑ
83B2	83B2	83D2	Œ•	Œ•	œÖ
83B3	83B3	83D3	Œ¶	Œ¶	œÜ
83B4	83B4	83D4	Œß	Œß	œá
83B5	83B5	83D5	Œ®	Œ®	œà
83B6	83B6	83D6	Œ©	Œ©	œâ
83BF	839F	83BF	Œ±	Œë	Œ±
83C0	83A0	83C0	Œ≤	Œí	Œ≤
83C1	83A1	83C1	Œ≥	Œì	Œ≥
83C2	83A2	83C2	Œ¥	Œî	Œ¥
83C3	83A3	83C3	Œµ	Œï	Œµ
83C4	83A4	83C4	Œ∂	Œñ	Œ∂
83C5	83A5	83C5	Œ∑	Œó	Œ∑
83C6	83A6	83C6	Œ∏	Œò	Œ∏
83C7	83A7	83C7	Œπ	Œô	Œπ
83C8	83A8	83C8	Œ∫	Œö	Œ∫
83C9	83A9	83C9	Œª	Œõ	Œª
83CA	83AA	83CA	Œº	Œú	Œº
83CB	83AB	83CB	ŒΩ	Œù	ŒΩ
83CC	83AC	83CC	Œæ	Œû	Œæ
83CD	83AD	83CD	Œø	Œü	Œø
83CE	83AE	83CE	œÄ	Œ†	œÄ
83CF	83AF	83CF	œÅ	Œ°	œÅ
83D0	83B0	83D0	œÉ	Œ£	œÉ
83D1	83B1	83D1	œÑ	Œ§	œÑ
83D2	83B2	83D2	œÖ	Œ•	œÖ
83D3	83B3	83D3	œÜ	Œ¶	œÜ
83D4	83B4	83D4	œá	Œß	œá
83D5	83B5	83D5	œà	Œ®	œà
83D6	83B6	83D6	œâ	Œ©	œâ
8440	8440	8470	–ê	–ê	–∞
8441	8441	8471	–ë	–ë	–±
8442	8442	8472	–í	–í	–≤
8443	8443	8473	–ì	–ì	–≥
8444	8444	8474	–î	–î	–¥
8445	8445	8475	–ï	–ï	–µ
8446	8446	8476	–Å	–Å	—ë
8447	8447	8477	–ñ	–ñ	–∂
8448	8448	8478	–ó	–ó	–∑
8449	8449	8479	–ò	–ò	–∏
844A	844A	847A	–ô	–ô	–π
844B	844B	847B	–ö	–ö	–∫
844C	844C	847C	–õ	–õ	–ª
844D	844D	847D	–ú	–ú	–º
844E	844E	847E	–ù	–ù	–Ω
844F	844F	8480	–û	–û	–æ
8450	8450	8481	–ü	–ü	–ø
8451	8451	8482	–†	–†	—Ä
8452	8452	8483	–°	–°	—Å
8453	8453	8484	–¢	–¢	—Ç
8454	8454	8485	–£	–£	—É
8455	8455	8486	–§	–§	—Ñ
8456	8456	8487	–•	–•	—Ö
8457	8457	8488	–¶	–¶	—Ü
8458	8458	8489	–ß	–ß	—á
8459	8459	848A	–®	–®	—à
845A	845A	848B	–©	–©	—â
845B	845B	848C	–™	–™	—ä
845C	845C	848D	–´	–´	—ã
845D	845D	848E	–¨	–¨	—å
845E	845E	848F	–≠	–≠	—ç
845F	845F	8490	–Æ	–Æ	—é
8460	8460	8491	–Ø	–Ø	—è
8470	8440	8470	–∞	–ê	–∞
8471	8441	8471	–±	–ë	–±
8472	8442	8472	–≤	–í	–≤
8473	8443	8473	–≥	–ì	–≥
8474	8444	8474	–¥	–î	–¥
8475	8445	8475	–µ	–ï	–µ
8476	8446	8476	—ë	–Å	—ë
8477	8447	8477	–∂	–ñ	–∂
8478	8448	8478	–∑	–ó	–∑
8479	8449	8479	–∏	–ò	–∏
847A	844A	847A	–π	–ô	–π
847B	844B	847B	–∫	–ö	–∫
847C	844C	847C	–ª	–õ	–ª
847D	844D	847D	–º	–ú	–º
847E	844E	847E	–Ω	–ù	–Ω
8480	844F	8480	–æ	–û	–æ
8481	8450	8481	–ø	–ü	–ø
8482	8451	8482	—Ä	–†	—Ä
8483	8452	8483	—Å	–°	—Å
8484	8453	8484	—Ç	–¢	—Ç
8485	8454	8485	—É	–£	—É
8486	8455	8486	—Ñ	–§	—Ñ
8487	8456	8487	—Ö	–•	—Ö
8488	8457	8488	—Ü	–¶	—Ü
8489	8458	8489	—á	–ß	—á
848A	8459	848A	—à	–®	—à
848B	845A	848B	—â	–©	—â
848C	845B	848C	—ä	–™	—ä
848D	845C	848D	—ã	–´	—ã
848E	845D	848E	—å	–¨	—å
848F	845E	848F	—ç	–≠	—ç
8490	845F	8490	—é	–Æ	—é
8491	8460	8491	—è	–Ø	—è
SELECT * FROM t1
WHERE HEX(CAST(LOWER(a) AS CHAR CHARACTER SET utf8)) <>
HEX(LOWER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
code	a
81F0	‚Ñ´
SELECT * FROM t1
WHERE HEX(CAST(UPPER(a) AS CHAR CHARACTER SET utf8)) <>
HEX(UPPER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
code	a
DROP TABLE t1;
#
# End of 5.5 tests
#
