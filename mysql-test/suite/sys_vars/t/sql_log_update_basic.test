
#
# 2010-01-20 OBN - Added check of I_S tables after variable value changes.
#                - Added value change to ON/OFF to ensure change of current value
#

--source include/have_profiling.inc

SET @start_global_value = @@global.sql_log_update;
SELECT @start_global_value;

#
# exists as global and session
#
select @@global.sql_log_update;
select @@session.sql_log_update;
show global variables like 'sql_log_update';
show session variables like 'sql_log_update';
select * from information_schema.global_variables where variable_name='sql_log_update';
select * from information_schema.session_variables where variable_name='sql_log_update';

#
# show that it's writable
#
set global sql_log_update=1;
set session sql_log_update=ON;
select @@global.sql_log_update;
select @@session.sql_log_update;
show global variables like 'sql_log_update';
show session variables like 'sql_log_update';
select * from information_schema.global_variables where variable_name='sql_log_update';
select * from information_schema.session_variables where variable_name='sql_log_update';
set global sql_log_update=0;
set session sql_log_update=OFF;
select @@global.sql_log_update;
select @@session.sql_log_update;
show global variables like 'sql_log_update';
show session variables like 'sql_log_update';
select * from information_schema.global_variables where variable_name='sql_log_update';
select * from information_schema.session_variables where variable_name='sql_log_update';

#
# incorrect types
#
--error ER_WRONG_TYPE_FOR_VAR
set global sql_log_update=1.1;
--error ER_WRONG_TYPE_FOR_VAR
set global sql_log_update=1e1;
--error ER_WRONG_VALUE_FOR_VAR
set global sql_log_update="foo";

SET @@global.sql_log_update = @start_global_value;
SELECT @@global.sql_log_update;
